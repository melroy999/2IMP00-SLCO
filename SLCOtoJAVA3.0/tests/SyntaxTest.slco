model SyntaxTest {
    actions actionA actionB

    classes
    P {
        variables Integer i Integer[3] A Boolean b
        state machines
        SM1 {
            variables Integer v
            initial SMC0
            transitions
                from SMC0 to SMC0 {
                    b;
                    [i = 0; v := A[0]; A[0] := A[1]; A[1] := v];
                    v := 0;
                    b := False;
                }
                from SMC0 to SMC0 {
                    b;
                    [i = 1; v := A[1]; A[1] := A[2]; A[2] := v];
                    v := 0;
                    b := False;
                }
                from SMC0 to SMC0 {
                    b;
                    [i = 2; v := A[2]; A[2] := A[0]; A[0] := v];
                    v := 0;
                    b := False;
                }
        }
        SM2 {
            initial SMC0
            transitions
                from SMC0 to SMC0 {
                    not b;
                    i := (i + 1) % 3;
                    b := True;
                }
        }
    }
    objects p1: P(A := [1, 3, 5], i := 0, b := False), p2: P()
}
